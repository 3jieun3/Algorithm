import numpy as np

def move(ch, bef, new):
    if ch == 'L':
        h[bef] = 0
        h[new] = 1
    else:
        h[bef] = 0
        h[new] = 2

def solution(numbers, hand):
    answer = ''
    global ph, h
    ph = np.array([[1,2,3],[4,5,6],[7,8,9],[10,0,12]])
    h = np.array([[0,0,0],[0,0,0],[0,0,0],[1,0,2]]) # 1: left , 2: right
    for i, n in enumerate(numbers):
        n_idx = np.where(ph==n)  # n 인덱스
        l_idx = np.where(h==1)   # 왼손 위치
        r_idx = np.where(h==2)   # 오른손 위치
        if n in ph[:, 0:1]:
            answer += 'L'
            move('L', l_idx, n_idx)
        elif n in ph[:, 2:]:
            answer += 'R'
            move('R', r_idx, n_idx)
        else:                               
            l_dis = abs(l_idx[0]-n_idx[0])+abs(l_idx[1]-n_idx[1])  # 왼손과의 거리 
            r_dis = abs(r_idx[0]-n_idx[0])+abs(r_idx[1]-n_idx[1])  # 오른손과의 거리
            
            if l_dis > r_dis:
                answer += 'R'
                move('R', r_idx, n_idx)
            elif l_dis < r_dis:
                answer += 'L'
                move('L', l_idx, n_idx)
            else:
                if hand == 'right':
                    answer += 'R'
                    move('R', r_idx, n_idx) 
                else:
                    answer += 'L'
                    move('L', l_idx, n_idx)
    return answer