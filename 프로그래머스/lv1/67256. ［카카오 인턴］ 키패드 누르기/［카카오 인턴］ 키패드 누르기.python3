left_nums = [1, 4, 7, -1]
middle_nums = [2, 5, 8, 0]
right_nums = [3, 6, 9, -1]

def solution(numbers, hand):
	answer = ''
	left, right = -1, -1        # 왼손위치: *, 오른손위치: #
	l, r = 0, 0                 # 왼손/오른손 현 위치에서의 거래
	for i in range(len(numbers)):
		n = numbers[i]
		if n in left_nums:
			answer += 'L'
			left = n
		elif n in right_nums:
			answer += 'R'
			right = n
		else:
			n_idx = middle_nums.index(n)
			# 왼손 현 위치에서의 거리 계산
			if left in left_nums:
				l = abs(n_idx - left_nums.index(left)) + 1
			elif left in middle_nums:
				l = abs(n_idx - middle_nums.index(left))

			# 오른손 현 위치에서의 거리 계산
			if right in right_nums:
				r = abs(n_idx - right_nums.index(right)) + 1
			elif right in middle_nums:
				r = abs(n_idx - middle_nums.index(right))

			if (l < r) or (l == r and hand == 'left'):
				answer += 'L'
				left = n
			elif (l > r) or (l == r and hand == 'right'):
				answer += 'R'
				right = n

	return answer